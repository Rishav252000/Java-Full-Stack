app1	:	Helloword programs
app2	:	Literals and comments
app3	:	println/print
app4	:	variables
app5	:	concatination
app6	:	basic operators
app7	:	unary operators
app8	:	command line arguments
app9	:	binary conversion
app10	:	logical and unary operators
app11	:	if-blocks
app12	:	nested if-blocks
app13	:	else blocks
app14	:	if-else blocks inside an if block
app15	:	if blocks inside an else block
app16	:	ternary operator
app17	:	switch-cases bsics
app18	:	switch-cases advanced
app19	:	for-loop basics
app20	:	for-loop flow
app21	:	nested and labeled loops
app22	:	while-loop
app23	:	do-while-loop
app24	:	for-each-loop
app25	:	methods
app26	:	method parameters/arguments
revisit to app20	:	for-loop flow
app27	:	static attributes/fields/properties
app28	:	static initializers (static initialization blocks)
app29	:	IFR
app30	:	one class members using in another class
app31	:	basics of arrays;
app32	:	basics of Strings;
app33	:	non static (objects and references)
app34	:	constructors and this as areference variable
app35	:	constructor overloading	and this() as a calling statement
app36	:	instance initialization blocks (IIB)
app37	:	instances count
app38	:	inheritance
app39	:	packages
app40	:	access levels or specifiers (private)
app41	:	default or package, protected and public access specifiers
app42	:	abstract classes
app43	:	interfaces
app44	:	method overloading and overriding
app45	:	primitive casting
app46	:	derived casting
app47	:	polymorphism
app48	:	final
app49	:	java documentation (javap, javadoc commands)
app50	:	classpath and jar command
app51	:	Scanner class
App52	:	Wrapper classes
App53	:	auto boxing war ags
App54	:	Exception Handling
App55	:	Inner class
App56	: `	leamda expression
App57	:	Why do we need inner classes
App58	:	Generics
App59	:	Object class(toString, hashCode and equals method)
App60	: 	garbage collection
App61	:	cloning
App62	:	reflection API
App63	:	Multi Threading(Thread class)
App64	:	MultiThreading (Runnable Interface)
App65	:	Thread default properties
App66	:	Sychronization
App67	:	Collection Api()
App68	:	collection API 	- 	Queue and stack
App69	:	Collection API	-	set
App70	:	Collection API	-	Map



		


	